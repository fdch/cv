#!/usr/local/bin/python3

import json
import requests
from datetime import datetime
import pickle
import argparse
import pandas as pd

datadir = "../.data/"
sheet = datadir + ".sheet_id.pkl"
sheetj = datadir + ".sheet_data.json"
texfile = datadir + ".temp.tex"


parser = argparse.ArgumentParser()

parser.add_argument("-u", '--update',
    help="Update local sheet data with google sheet data.", 
    action="store_true")

args = parser.parse_args()

if args.update:

    print("Updating local sheet...")
    
    with open(sheet, 'rb') as f:
        sheet_id = pickle.load(f)

    sheet_data = []

    for i in range(5):
        try:
            url  = "https://spreadsheets.google.com/feeds/list/" 
            url += sheet_id + "/"
            url += str(i+1)   + "/" 
            url += "public/values?alt=json"
            r = requests.get(url)
            data = json.loads(r.text)
            sheet_data.append(data)
        except Exception as e:
            print(e)

    with open(sheetj, 'w') as f:
        f.write(json.dumps(sheet_data, 
            sort_keys=True,
            indent=4,
            separators=(',',':'))
        )

with open(sheetj, 'r') as f:
    sheet_data = json.load(f)

def fmt(s):
    if "~" in s:
        s = "\\url{" + s + "}"
    return s

def getkey(dic,key):
    return dic["gsx$"+key]["$t"]

def latex_tag(s, tag=None):
    if tag is not None:
        return "\\" + tag +"{"+ s + "}\n"
    else:
        return "\\" + s + "\n"

def latex_wrap(s,tag):
    ss = latex_tag(tag,'begin') + "\n"
    ss += s + "\n"
    ss += latex_tag(tag,'end')
    return ss
    

def element(dic, key=None, tag=None):
    if key is not None and isinstance(dic,dict):
        if 'description' in key:
            s = latex_wrap(getkey(dic,key),'position')
        else:
            if tag is None:
                tag = key
            s = latex_tag(fmt(getkey(dic,key)),tag)
    else:
        s = latex_wrap(dic,'position')
    return s + "\n"

def make_input(file,title,source,path="../sections/"):
    file.write(latex_tag(title, "section"))
    if isinstance(source,str):
        source = [source]
    for i in source:
        file.write(latex_tag(path+i+".tex", "input"))

with open(texfile, 'w') as f:
    date = str(datetime.date(datetime.now()))
    f.write("%" + "-"*78 + "\n%\n")
    f.write("% Automatically generated by make \n")
    f.write("%" + " on " + date + "\n%\n")
    f.write("%" + "-"*78 + "\n")
    f.write(latex_tag("../style/res.cls","documentclass[overlapped,12pt]"))
    f.write(latex_tag('document','begin'))
    f.write(latex_tag('resume','begin'))
    make_input(f,"POST-DOCTORAL EXPERIENCE", "cv_work")
    make_input(f,"EDUCATION", "cv_education")
    make_input(f,"DISSERTATION", ["diss_header","diss_abstract"])
    make_input(f,"RESEARCH", "cv_research")
    f.write(latex_tag("pagebreak"))
    make_input(f,"PUBLICATIONS", "cv_publications")
    make_input(f,"OTHER SKILLS",'cv_skills')

    for i in sheet_data:
        f.write("%" + "="*78 + "\n")
        title = i['feed']['title']['$t']
        f.write("%"+title+"- last updated:" +i['feed']['updated']['$t']+"\n")
        f.write("%" + "="*78 + "\n")
        if 'teaching' in title:
            f.write(latex_tag('TEACHING EXPERIENCE','section'))
            for j in i['feed']['entry']:
                f.write("%" + "-"*78 + "\n")
                # f.write([k for k in j.keys() if 'gsx' in k])
                f.write(latex_tag(f"{getkey(j,'type').title()} - {getkey(j,'class').title()}",'title'))
                f.write(latex_tag(f"{getkey(j,'term')} {getkey(j,'year')}",'dates'))
                f.write(element(j,'description'))
                f.write(element(j,'institution','employer'))
                f.write(element(j,'department','location'))
                # f.write(element(j,'timestamp'))

        elif 'awards' in title:
            f.write(latex_tag('AWARDS AND RECOGNITIONS','section'))
            for j in i['feed']['entry']:
                f.write("%" + "-"*78 + "\n")
                f.write(element(j,'title'))
                f.write(element(j,'duration','dates'))
                f.write(element(j,'description'))
                f.write(element(j,'where','location'))
                f.write(element(j,'type','employer'))
                # f.write(element(j,'timestamp'))
                # f.write(getkey(j,'who'))
                # f.write(getkey(j,'url'))

        elif 'collabs' in title:
            f.write(latex_tag('SELECTED COLLABORATIONS','section'))
            for j in i['feed']['entry']:
                f.write("%" + "-"*78 + "\n")
                f.write(element(j,'category','title'))
                f.write(element(j,'year','dates'))
                f.write(element(j,'description'))
                f.write(element(j,'where','location'))
                # f.write(element(j,'timestamp'))

        elif 'perform' in title:
            f.write(latex_tag('SELECTED PERFORMANCES','section'))
            for j in i['feed']['entry']:
                f.write("%" + "-"*78 + "\n")
                f.write(element(j,'what','title'))
                f.write(element(j,'when', 'dates'))
                f.write(element(f"{getkey(j,'instrument')} with {getkey(j,'with').title()} at {getkey(j,'where').title()}"))
                f.write(element(j,'how','employer'))
                f.write(element(j,'where','location'))
                # f.write(element(j,'timestamp'))

        elif 'admin' in title:
            f.write(latex_tag('ADMINISTRATIVE EXPERIENCE','section'))
            for j in i['feed']['entry']:
                f.write("%" + "-"*78 + "\n")
                f.write(element(j,'title'))
                f.write(element(j,'dates'))
                f.write(element(j,'description'))
                f.write(element(j,'employer'))
                f.write(element(j,'location'))
                # f.write(element(j,'timestamp'))
        else:
            print("---WARNING:" + title + " ---> Skipping...")
    f.write(latex_tag('resume','end'))
    f.write(latex_tag('document','end'))
